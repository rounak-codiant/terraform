#AWS Provider Key
aws_profile_name = "aws_profile_name"
aws_region     = "us-east-1"


#Project name & ENV
project_name = "Terraform"
env_suffix   = "test"

# Terraform Backend Module
terraform_bucket_name       = "terraform-sample-backend-bucket-2121"
terraform_bucket_versioning = "Enabled"
table_name                  = "terraform-backend-sample-tablename"

#VPC
vpc_cidr_block       = "20.0.0.0/16"
private_cidr_block   = ["20.0.0.0/20", "20.0.16.0/20", "20.0.32.0/20"]
public_cidr_block    = ["20.0.48.0/20", "20.0.64.0/20", "20.0.80.0/20"]
enable_dns_hostnames = "true"


#EC2
instance_type      = "t2.nano"
ebs_volume_type    = "gp2"
ebs_volume_size    = "10"
key_pair_name      = "pemkey"
ec2_role_name      = "ec2-role"
ec2_policy_name    = "ec2-role-policy"
ec2_monitoring     = "true"
php_version        = "8.1"
node_version       = "16"
composer_install   = "yes"
php_nginx_config   = "yes"
php_module         = "yes"
node_nginx_config  = "no"
ami_name           = "ubuntu/images/hvm-ssd/ubuntu-jammy-*arm64"  // For Ubuntu 22
# ami_name         = "ubuntu/images/hvm-ssd/ubuntu-focal-*arm64"    // For Ubuntu 20
# ami_name         = "ubuntu/images/hvm-ssd/ubuntu-bionic-*arm64"   // For Ubuntu 18
# ami_name         = "amzn2-ami-hvm*-arm64"                         // For Amazon Linux
# ami_name         = "CentOS Stream 9 aarch64"                      // For Centos 9


#S3 Private Bucket
private_bucket_name                    = "private-bucket-1212"
private_bucket_versioning              = "Enabled"
private_bucket_acceleration            = "Suspended"
private_destination_bucket_name        = "private-bucket-replica-bucket"
private_bucket_replication_option      = "Disabled"
private_replication_destination_region = "us-east-2"
private_bucket_lifecycle_rule          = "Disabled"


#S3 Public Bucket
public_bucket_name                    = "public-bucket-1212"
public_bucket_versioning              = "Enabled"
public_bucket_acceleration            = "Suspended"
public_destination_bucket_name        = "public-bucket-replica-bucket"
public_bucket_replication_option      = "Disabled"
public_replication_destination_region = "us-east-2"
public_bucket_lifecycle_rule          = "Disabled"


#Database (RDS)
database_cluster_identifier          = "database-cluster"
database_cluster_engine_version      = "5.7.mysql_aurora.2.11.1"
database_instance_identifier         = "database-instance"
database_cluster_skip_final_snapshot = "true"
database_engine                      = "aurora-mysql"
database_name                        = "databasename"
database_master_username             = "admin"
database_master_password             = "a44N9PPR2gNXJakI1gP6"
database_backup_retention_period     = "7"
deletion_protection                  = "false"
storage_encrypted                    = "true"
allow_major_version_upgrade          = "false"
copy_tags_to_snapshot                = "true"
snapshot_identifier_name             = "db-snap"
database_instance_class              = "db.t2.small"
publicly_accessible                  = "false"
cluster_parameter_group              = "cluster-parameter-group"
db_instance_pg_name                  = "db-instance-parameter-group"
long_query_time                      = "10"       //10 second
max_allowed_packet                   = "64000000" //64MB
general_log                          = "1"
slow_query_log                       = "1"
db_parameter_group_family            = "aurora-mysql5.7"
cluster_parameter_group_family       = "aurora-mysql5.7"
# database_cluster_engine_mode = "provisioned"


#Cache Database (Redis)
redis_user_name                  = "redis"
redis_user_pwd                   = "Redis@YbhsFqa1P121KEC"
cachedb_engine                   = "redis"
cachedb_name                     = "redis-cache"
cachedb_description              = "Redis Database"
cachedb_port                     = "6379"
cachedb_node_type                = "cache.t2.micro"
num_cache_nodes                  = "1"
version_upgrade                  = "false"
snapshot_retention_limit         = "7"
rest_encryption_enabled          = "true"
transit_encryption_enabled       = "true"
automatic_failover_enabled       = "false"

#Secret Manager
secretmanager_name = "SecretManager"


#ALB (Application Load Balancer)

#Target Group
tg_name        = "target-group"
tg_port        = "80"
tg_protocol    = "HTTP"
tg_target_type = "instance"

#Health Check
lb_tg_health_check_path     = "/"
lb_tg_health_check_port     = "80"
lb_tg_health_check_protocol = "HTTP"
lb_tg_health_check_matcher  = "200"

#Load Balancer
lb_name                = "alb-1"
lb_internal            = "false"
lb_type                = "application"
lb_deletion_protection = "false"


#Load Balancer Listener
lb_listener_protocol = "HTTP"
lb_listener_port     = "80"

#ALB Logs
alb_log_prefix        = "ALB"
alb_bucket_versioning = "Enabled"
alb_logs_bucket_name  = "alb-logs-bucket-112w233"
alb_logs_enable       = "true"
alb_idle_timeout      = "120"

#CDN
public_headers_policy_name           = "Public-CDN-HeadersPolicy"
private_headers_policy_name          = "Private-CDN-HeadersPolicy"
objects_compress                     = "true"
ipv6_enabled                         = "true"
http_version                         = "http2and3"
public_cloudfront_description        = "Public CloudFront Distribution"
private_cloudfront_description       = "Private CloudFront Distribution"
private_access_control_max_age       = "31536000"
private_content_security_policy      = "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'"
private_access_control_allow_origins = "*.test.com"
private_permissions_policy           = "accelerometer=(self), camera=(self), cross-origin-isolated=(self), encrypted-media=(self), geolocation=(self), microphone=(self), interest-cohort=()"
public_access_control_max_age        = "31536000"
public_content_security_policy       = "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'"
public_access_control_allow_origins  = "*.test.com"
public_permissions_policy            = "accelerometer=(self), camera=(self), cross-origin-isolated=(self), encrypted-media=(self), geolocation=(self), microphone=(self), interest-cohort=()"


## CodeCommit
repository_name        = "codecommit-repo"
repository_description = "CodeCommit Git Repo"
codecommit_user_name   = "codecommit"
iam_force_destroy      = "true"
repo_default_branch    = "main"

## CodeBuild
codebuild_bucket_name         = "codebuild1243"
codebuild_bucket_versioning   = "Enabled"
codebuild_role_name           = "codebuild-role"
codebuild_project_name        = "code-build-project"
codebuild_project_description = "Code Build Project"
build_timeout                 = "15"
codebuild_image               = "aws/codebuild/standard:6.0"
codebuild_compute_type        = "BUILD_GENERAL1_SMALL"

## CodeDeploy
codedeploy_app_name          = "CodedDeploy-App"
deployment_group_name        = "Deployment-Group"
codedeploy_service_role_name = "CodeDeploy-Serivce-Role"
instances_terminate_time     = "5"

## Code Pipeline
pipeline_name = "CodePipeline"


## AWS WAF
alb_waf_acl_name        = "alb-waf-acl"
cdn_waf_acl_name        = "cdn-waf-acl"
alb_waf_acl_description = "Application Load Balancer Waf ACL"
cdn_waf_acl_description = "CloudFront Waf ACL"


## Static Webside
static_bucket_name                  = "static-bucket-terraform-1"
static_bucket_versioning            = "Enabled"
static_headers_policy_name          = "Static-CDN-HeadersPolicy"
static_cloudfront_description       = "Static CloudFront Distribution"
static_access_control_max_age       = "31536000"
static_content_security_policy      = "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'"
static_access_control_allow_origins = "*.test.com"
static_permissions_policy           = "accelerometer=(self), camera=(self), cross-origin-isolated=(self), encrypted-media=(self), geolocation=(self), microphone=(self), interest-cohort=()"
default_root_object                 = "index.html"
